<todo>
トポロジカルソートみたいなので、順番付け(1対1のとき)(=の時も含めて考える)
すでに分かっている質問->重いほうに増えても、軽いほうに減っても結果は変わらない
すでに分かっている質問->今までの質問により、分かる場合
多対多で、採用されなかったときに個数を減らすなどの対応
ビジュアライザを使う
最初 -> sort済み、最初と最後に大して、操作を繰り返す
最後 -> rondom(この時1個ずつの交換、挿入は失敗する気がする)
      今size==1なら放置しているけど、どうするか


#10/17
最初からrondomで、多対多にした
多対多だと、採用される確率が小さいため、なかなか成功しなかった。


#10/16
最初からrandomはどうなの？->失敗した
最初はsortしておいて、最後randomじゃないと厳しそう
一番小さい時と、一番大きい時が変化しなくなったらrandomで2つ選んで変えていく
このときに、sort済み列を保存->1回までなら大きいほうが分かっているから変えられる

#10/15
2つとか要素が少ない時の交換が弱い
交換ができるときの条件をもう少し詳しく書く
トポロジカルソートみたいなので、順番付け(1対1のとき)
Hash関数を使って、昔やったことがある質問はしない

#10/14
D個のグループに分ける
->二分木みたいな感じで、sort
要素を交換するを繰り返す
いちど試した組み合わせをsetに入れて、無理だったらやめとく
譲渡するパターンの追加
最後の方には、一個前との比較だけで済みそう
->比較のやつの改善
最初の方は変化が大きい？からsortのやつで判断
最後の方に、残りの質問回数が少なかったら省略バージョン->sortする必要がなくなる
